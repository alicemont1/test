name: Python Notebook Testing

on:
  pull_request:
    branches: [main]
    paths:
      - '**.ipynb'
      - 'requirements-test.txt'
      - 'environment.yml'
      - 'tests/**'
      - '.github/workflows/**'

permissions:
  contents: read

jobs:
  test-modified-notebooks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: 'requirements-test.txt'

      - name: Install test dependencies
        run: pip install -r requirements-test.txt

      - name: Get Cartopy data directory
        id: cartopy-dir
        run: |
          REPO_DIR=$(python3 -c "import cartopy; print(cartopy.config['repo_data_dir'])")
          echo "repo_data_dir=$REPO_DIR" >> $GITHUB_OUTPUT

      - name: Restore Cartopy cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.cartopy-dir.outputs.repo_data_dir }}
          key: cartopy-v2-${{ runner.os }}-${{ hashFiles('requirements-test.txt') }}
          restore-keys: |
            cartopy-v2-${{ runner.os }}-

      - name: Download Cartopy features if not cached
        run: |
          REPO_DIR=${{ steps.cartopy-dir.outputs.repo_data_dir }}
          mkdir -p "$REPO_DIR"
          if [ ! -f "$REPO_DIR/gshhs/h/GSHHS_h_L1.shp" ]; then
            echo "Downloading Cartopy features..."
            python3 -m cartopy.feature.download -o "$REPO_DIR" gshhs physical cultural cultural-extra
          else
            echo "Cartopy features already present."
          fi

      - name: List Cartopy repo_data_dir
        run: ls -laR ${{ steps.cartopy-dir.outputs.repo_data_dir }}

      - name: Save Cartopy cache
        if: steps.cartopy-dir.outputs.repo_data_dir != ''
        uses: actions/cache@v4
        with:
          path: ${{ steps.cartopy-dir.outputs.repo_data_dir }}
          key: cartopy-v2-${{ runner.os }}-${{ hashFiles('requirements-test.txt') }}

      - name: Run notebook tests
        run: pytest -s -v tests/test_notebooks.py

      - name: Debug with tmate if test fails
        if: failure()
        uses: mxschmitt/action-tmate@v3
